#include<stdio.h>
#include<stdlib.h>

int rd() {
    int rem;
    A: rem = rand() % 7;
    if (rem == 0)
        goto A;
    else
        return rem;
}

void displaychart(int curp, char player[4]) {
    int i, j, t, c, sft = 0, diceres;

    if (curp == 100) {
        printf("Congratulations!!!!!! \n\nPlayer %s wins\n", player);
        scanf("%*s");
        exit(0);
    }

    for (i = 10; i > 0; i--) {
        t = i - 1;
        if ((sft % 2) == 0) {
            c = 0;
            for (j = 10; j >= 1; j--) {
                diceres = (i * j) + (t * c++);

                if (curp == diceres)
                    printf("%s\t", player);
                else
                    printf("%d\t", diceres);
            }
            sft++;
        } else {
            c = 9;
            for (j = 1; j <= 10; j++) {
                diceres = (i * j) + (t * c--);

                if (curp == diceres)
                    printf("%s\t", player);
                else
                    printf("%d\t", diceres);
            }
            sft++;
        }
        printf("\n\n");
    }

    printf("\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\n");
}

void main() {
    int dice, cur_pos1 = 0, cur_pos2 = 0;
    char ch;

    while (1) {
        printf("Snakes: | 25 to 9  | 65 to 40 | 99 to 1  |\nLadders: | 13 to 42 | 60 to 83 | 70 to 93 |\n\n");
        printf("Choose your option\n");
        printf("[1] Player 1 plays\n");
        printf("[2] Player 2 plays\n");
        printf("[3] Exit\n");
        scanf(" %c", &ch);  // Note the space before %c to consume any newline characters

        switch (ch) {
            case '1':
                dice = rd();
                system("cls");
                printf("\n\n\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\n");
                printf("\t\t\t    Snakes And Ladders\n");
                printf("\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\n");
                
                cur_pos1 += dice;

                if (cur_pos1 <= 100) {
                    if (cur_pos1 == 99) cur_pos1 = 1;    // Snake
                    else if (cur_pos1 == 65) cur_pos1 = 40;  // Snake
                    else if (cur_pos1 == 25) cur_pos1 = 9;   // Snake
                    else if (cur_pos1 == 70) cur_pos1 = 93;  // Ladder
                    else if (cur_pos1 == 60) cur_pos1 = 83;  // Ladder
                    else if (cur_pos1 == 13) cur_pos1 = 42;  // Ladder
                    
                    displaychart(cur_pos1, "-P1-");
                } else {
                    cur_pos1 -= dice;
                    printf("Range exceeded for Player 1.\n");
                    displaychart(cur_pos1, "-P1-");
                }
                printf("Player 2 position is %d\n\n", cur_pos2);
                printf("Dice = %d\n", dice);
                break;

            case '2':
                dice = rd();
                system("cls");
                printf("\n\n\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\n");
                printf("\t\t\t    Snakes And Ladders\n");
                printf("\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\xcd\n");

                cur_pos2 += dice;

                if (cur_pos2 <= 100) {
                    if (cur_pos2 == 99) cur_pos2 = 1;    // Snake
                    else if (cur_pos2 == 65) cur_pos2 = 40;  // Snake
                    else if (cur_pos2 == 25) cur_pos2 = 9;   // Snake
                    else if (cur_pos2 == 70) cur_pos2 = 93;  // Ladder
                    else if (cur_pos2 == 60) cur_pos2 = 83;  // Ladder
                    else if (cur_pos2 == 13) cur_pos2 = 42;  // Ladder
                    
                    displaychart(cur_pos2, "-P2-");
                } else {
                    cur_pos2 -= dice;
                    printf("Range exceeded for Player 2.\n");
                    displaychart(cur_pos2, "-P2-");
                }
                printf("Player 1 position is %d\n\n", cur_pos1);
                printf("Dice = %d\n", dice);
                break;

            case '3':
                exit(0);

            default:
                printf("Incorrect choice. Try again.\n");
        }
    }
}
